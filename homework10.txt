1. Self-study: find an utility to inspect initrd file contents. Find all files that are related to XFS filesystem and give a short description for every file.

# Как я понял, initrd устарел и был заменен на initramfs. Я проверил каталоги /dev/ и /boot/. initrdбыл основан на блочном устройстве, initramfs – это файловая база. Файл .img хранится в cpio архиве ,который представляет собой формат двоичного архива.

1) Смотрю содержимое /boot/ со скрытыми файлами:
[root@localhost ~]# ls -la /boot/
итого 120688
dr-xr-xr-x.  5 root root     4096 ноя 25 00:50 .
dr-xr-xr-x. 20 root root      274 ноя 20 20:30 ..
-rw-r--r--.  1 root root   147859 сен 26 18:15 config-3.10.0-862.14.4.el7.x86_64
-rw-r--r--.  1 root root   147819 апр 20  2018 config-3.10.0-862.el7.x86_64
drwxr-xr-x.  3 root root       17 окт 23 19:06 efi
drwxr-xr-x.  2 root root       27 окт 23 19:07 grub
drwx------.  5 root root       97 ноя 10 12:17 grub2
-rw-------.  1 root root 55394783 окт 23 19:11 initramfs-0-rescue-3df6e81b710d4dd1b40b2a19862d544b.img
-rw-------.  1 root root 20797302 ноя 25 00:50 initramfs-3.10.0-862.14.4.el7.x86_64.img
-rw-------.  1 root root 20774599 ноя 25 00:50 initramfs-3.10.0-862.el7.x86_64.img
-rw-r--r--.  1 root root   305158 сен 26 18:17 symvers-3.10.0-862.14.4.el7.x86_64.gz
-rw-r--r--.  1 root root   304926 апр 20  2018 symvers-3.10.0-862.el7.x86_64.gz
-rw-------.  1 root root  3414754 сен 26 18:15 System.map-3.10.0-862.14.4.el7.x86_64
-rw-------.  1 root root  3409143 апр 20  2018 System.map-3.10.0-862.el7.x86_64
-rwxr-xr-x.  1 root root  6224704 окт 23 19:11 vmlinuz-0-rescue-3df6e81b710d4dd1b40b2a19862d544b
-rwxr-xr-x.  1 root root  6398144 сен 26 18:15 vmlinuz-3.10.0-862.14.4.el7.x86_64
-rw-r--r--.  1 root root      171 сен 26 18:15 .vmlinuz-3.10.0-862.14.4.el7.x86_64.hmac
-rwxr-xr-x.  1 root root  6224704 апр 20  2018 vmlinuz-3.10.0-862.el7.x86_64
-rw-r--r--.  1 root root      166 апр 20  2018 .vmlinuz-3.10.0-862.el7.x86_64.hmac

2) Посмотреть только версию initframfs:
[root@localhost ~]# ls -la /boot/initramfs-$(uname -r).img
-rw-------. 1 root root 20797302 ноя 25 00:50 /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img

3) Смотрю что содержится в этом файле с помощью команды lsinitrd. Файл большой, использую more:
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img  | more
Image: /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img: 20M
========================================================================
Early CPIO image
========================================================================
drwxr-xr-x   3 root     root            0 Nov 25 00:49 .
-rw-r--r--   1 root     root            2 Nov 25 00:49 early_cpio
drwxr-xr-x   3 root     root            0 Nov 25 00:49 kernel
drwxr-xr-x   3 root     root            0 Nov 25 00:49 kernel/x86
drwxr-xr-x   2 root     root            0 Nov 25 00:49 kernel/x86/microcode
-rw-r--r--   1 root     root        22528 Nov 25 00:49 kernel/x86/microcode/GenuineIntel.bin
========================================================================
Version: dracut-033-535.el7_5.1

Arguments: -f

dracut modules:
bash
nss-softokn
i18n
network
ifcfg
drm
plymouth
dm
kernel-modules
lvm

4) Поскольку файл большой, использую grep:
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img  | grep xfs
drwxr-xr-x   2 root     root            0 Nov 25 00:49 usr/lib/modules/3.10.0-862.14.4.el7.x86_64/kernel/fs/xfs
-rw-r--r--   1 root     root       333964 Sep 26 18:37 usr/lib/modules/3.10.0-862.14.4.el7.x86_64/kernel/fs/xfs/xfs.ko.xz
-rwxr-xr-x   1 root     root          433 Apr 11  2018 usr/sbin/fsck.xfs
-rwxr-xr-x   1 root     root       590200 Nov 25 00:49 usr/sbin/xfs_db
-rwxr-xr-x   1 root     root          747 Apr 11  2018 usr/sbin/xfs_metadump
-rwxr-xr-x   1 root     root       576824 Nov 25 00:49 usr/sbin/xfs_repair
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img  | grep -v !'xfs'
-bash: !'xfs': event not found
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img  | grep -v !"xfs"
-bash: !"xfs": event not found
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img  | grep "xfs"
drwxr-xr-x   2 root     root            0 Nov 25 00:49 usr/lib/modules/3.10.0-862.14.4.el7.x86_64/kernel/fs/xfs
-rw-r--r--   1 root     root       333964 Sep 26 18:37 usr/lib/modules/3.10.0-862.14.4.el7.x86_64/kernel/fs/xfs/xfs.ko.xz
-rwxr-xr-x   1 root     root          433 Apr 11  2018 usr/sbin/fsck.xfs
-rwxr-xr-x   1 root     root       590200 Nov 25 00:49 usr/sbin/xfs_db
-rwxr-xr-x   1 root     root          747 Apr 11  2018 usr/sbin/xfs_metadump
-rwxr-xr-x   1 root     root       576824 Nov 25 00:49 usr/sbin/xfs_repair

2. Explain the difference between ordinary and rescue initrd images.
Иногда возникает ситуация, при которой загрузка Linux невозможна из за неправильно собранного образа диска initrd. Чтобы исправить initrd необходимо загрузить Linux, чтобы загрузить Linux нужен исправленный initrd. В CentOS и аналогичных системах можно загрузиться с установочного диска в режим восстановления - Rescue mode. 

3. Study dracut utility that is used for rebuilding initrd image. Give an example for adding driver/kernel module for your initrd and recreating it.

#dracut - утилита создания initramfs (initial RAM disk image, загружаемый в оперативную память файл с образом файловой системы), используемого при загрузке Linux в качестве первоначальной корневой файловой системы. dracut имеет модульную структуру. Не все модули включены по умолчанию.

# Смотрю список модулей dracut:
[root@localhost ~]# dracut --list-modules
bash
systemd-bootchart
modsign
rescue
watchdog
busybox
nss-softokn
i18n
convertfs
network
ifcfg
url-lib
drm
plymouth
cms
bcache
btrfs
crypt
dm
dmraid
dmsquash-live
dmsquash-live-ntfs
kernel-modules
livenet
lvm
mdraid
multipath
multipath-hostonly
qemu
qemu-net
crypt-gpg
crypt-loop
cifs
dasd
dasd_mod
debug
fcoe
fcoe-uefi
fstab-sys
iscsi
nbd
nfs
resume
rootfs-block
ssh-client
terminfo
udev-rules
virtfs
zfcp
znet
biosdevname
ecryptfs
pollcdrom
selinux
syslog
systemd
usrmount
base
fs-lib
img-lib
kdumpbase
microcode_ctl-fw_dir_override
shutdown
uefi-lib

# Этот список модулей можно переопределить двумя способами: из командной строки или из файла конфигурации.
# Файл конфигурации - /etc/dracut.conf
[root@localhost ~]# vim /etc/dracut.conf

# Можно добавлять пользовательские модули. Если модуль отказывается от установки (например, его обязательные двоичные файлы отсутствуют), есть ключ командной строки --force-add, чтобы добавить их в любом случае.

/*
# Equivalent to -H
hostonly="yes"

# Equivalent to -m "module module module"
dracutmodules+="dash kernel-modules rootfs-block udev-rules usrmount base fs-lib shutdown"

# Equivalent to -a "module"
add_dracutmodules+="module"

# Equivalent to -o "module"
omit_dracutmodules+="module"
*/

Пример:
# Создать initramfs только из указанных модулей:
dracut -m "модули" initramfs.img

# Добавить модули в командной строке:
--force-add список-модулей-dracut /boot/initramfs-3.10.0-862.14.4.el7.x86_64.img
